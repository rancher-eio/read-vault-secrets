---
name: Read Vault Secrets
description: "... it reads secrets from Vault?"
inputs:
  address:
    description: "the address of a deployed vault server"
    required: false
    default: https://vault.rancher.engineering
  secrets:
    description: "the secrets to fetch from the vault server"
    required: false
    default: secret/data/github-actions/test status
outputs:
  secret_values:
    description: "JSON object containing the retrieved secrets"
    value: ${{ steps.vault.outputs.secrets }}
# outputs:
#   PROOF_OF_CONCEPT:
#     description: "the secret fetched from vault"
#     value: ${{ steps.vault.outputs.PROOF_OF_CONCEPT }}
runs:
  using: composite
  steps:
    - name: Read Secrets from Vault
      uses: hashicorp/vault-action@v3
      id: vault
      with:
        method: jwt
        url: ${{ inputs.address }}
        path: ${{ github.repository_owner }}
        role: ${{ github.event.repository.name }}
        secrets: ${{ inputs.secrets }}
        # outputType: json
        exportEnv: true 
        #exportToken: false
        
    - name: Export Specific Secrets to Environment and as Outputs
      id: set-outputs
      shell: bash
      run: |
        if [[ "${{ inputs.secrets }}" == *"|"* ]]; then
          SECRET_NAME=$(echo "${{ inputs.secrets }}" | cut -d '|' -f 2 | xargs)
        else
          SECRET_NAME=$(basename "${{ inputs.secrets }}" | tr '[:lower:]' '[:upper:]' | tr ' ' '_')
        fi
        SECRET_VALUE="${!SECRET_NAME}"
        if [ -n "$SECRET_VALUE" ]; then
          echo "::add-mask::$SECRET_VALUE"
          echo "$SECRET_NAME=$SECRET_VALUE" >> $GITHUB_OUTPUT
          echo "Set output for $SECRET_NAME"
          
          unset "$SECRET_NAME"
          echo "Cleared $SECRET_NAME from environment"
        else
          echo "Warning: No value found for $SECRET_NAME"
          exit 1
        fi
      # env:
      #   SECRETS_JSON: ${{ steps.set-outputs.outputs.secrets }}
      # run: |
      #   echo "$SECRETS_JSON" | jq -r 'to_entries | .[] | "echo \"::add-mask::"+.value+"\""' | bash
      #   echo "$SECRETS_JSON" | jq -r 'to_entries | .[] | "echo \""+.key+"="+.value+"\" >> $GITHUB_OUTPUT"' | bash
      #   echo "$SECRETS_JSON" | jq -r 'to_entries | .[] | "echo \""+.key+"="+.value+"\" >> $GITHUB_ENV"' | bash
      
    - name: Debug Vault Output
      shell: bash
      run: |
        echo "Vault output format check:"
        echo "Has 'secrets' output: ${{ steps.set-outputs.outputs.secrets != '' }}"
        echo "Verify that PROOF_OF_CONCEPT: ${{ steps.set-outputs.outputs.PROOF_OF_CONCEPT != '' }}"
        
